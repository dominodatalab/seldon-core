version: 2.1

orbs:
  go: circleci/go@1.7.1
  helm: circleci/helm@2.0.1
  repo-standards: dominodatalab/repo-standards@0.1

parameters:
  kustomize-version:
    type: string
    default: v4.5.7

jobs:
  test:
    machine:
      image: ubuntu-2004:current
    environment:
      KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
      KUSTOMIZE_VERSION: "v4.3.0"
      K3S_KUBECONFIG_MODE: "644"
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - helm/install-helm-client:
          version: v3.6.3
      - run:
          name: Install and Launch Kubernetes
          command: |
            curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.24.3+k3s1 sh -x -
            sleep 10
            kubectl wait --for=condition=Available --timeout=60s deployments --all -n kube-system
      - run:
          name: Setup
          command: ./test/seldon/setup/install-all
      - run:
          name: Creating Basic Models
          command: ./test/seldon/model/create-models
      - run:
          name: Testing Basic Models
          command: ./test/seldon/model/test-models
      - run:
          name: Deleting Basic Models
          command: ./test/seldon/model/delete-models
      - run:
          name: Creating RabbitMQ Models
          command: ./test/seldon/model/create-rabbit-models
      - run:
          name: Testing RabbitMQ Models
          command: ./test/seldon/model/test-rabbit-models
      - run:
          name: Deleting RabbitMQ Models
          command: ./test/seldon/model/delete-rabbit-models
      - run:
          name: Teardown
          command: ./test/seldon/setup/uninstall-all

workflows:
  version: 2
  main:
    jobs:
      - repo-standards/package-docker:
          name: seldon-core-operator_image_build_and_push
          image_dockerfile: "operator/Dockerfile"
          image_name: "domino/seldon-core-operator"
          base_branch: "rabbitmq"
          context:
            - repo-standards-docker-login-readwrite
          filters:
            tags:
              only: /v\d+(\.\d+)*(-.*)*/
          pre-steps:
            - go/install:
                version: "1.17"
            - run:
                name: "Install kustomize"
                command: |
                  URL=https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/<< pipeline.parameters.kustomize-version >>/kustomize_<< pipeline.parameters.kustomize-version >>_linux_amd64.tar.gz
                  curl -L $URL | tar zx

                  [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
                  $SUDO chmod +x ./kustomize
                  $SUDO mv ./kustomize /usr/local/bin
            - checkout
            - run:
                name: "Generate resources for image"
                working_directory: operator
                command: |
                  make generate-resources 
          post-steps:
            - run:
                name: "Get operator Docker image tag for downstream tests"
                command: |
                  dtag="$(cat ci_artifacts/image_name | sed 's/.*://')"
                  echo "Saving Docker image tag to file: ${dtag}"
                  echo "${dtag}" > ~/.seldon-core-image-tag
            
            - persist_to_workspace:
                root: ~/
                paths:
                  - .seldon-core-image-tag
      
      - repo-standards/package-docker:
          name: seldon-core-executor_image_build_and_push
          image_dockerfile: "executor/Dockerfile.executor"
          image_name: "domino/seldon-core-executor"
          base_branch: "rabbitmq"
          context:
            - repo-standards-docker-login-readwrite
          filters:
            tags:
              only: /v\d+(\.\d+)*(-.*)*/
          pre-steps:
            - go/install:
                version: "1.17"
            - run:
                name: "Install kustomize"
                command: |
                  URL=https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/<< pipeline.parameters.kustomize-version >>/kustomize_<< pipeline.parameters.kustomize-version >>_linux_amd64.tar.gz
                  curl -L $URL | tar zx

                  [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
                  $SUDO chmod +x ./kustomize
                  $SUDO mv ./kustomize /usr/local/bin
            - checkout
            - run:
                name: "Generate resources for image"
                working_directory: executor
                command: |
                  make test copy_openapi_resources 

      - test:
          context:
            - org-global
          requires:
            - seldon-core-operator_image_build_and_push
            - seldon-core-executor_image_build_and_push
          filters:
            tags:
              only: /v\d+(\.\d+)*(-.*)*/
